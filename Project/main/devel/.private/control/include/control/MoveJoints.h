// Generated by gencpp from file control/MoveJoints.msg
// DO NOT EDIT!


#ifndef CONTROL_MESSAGE_MOVEJOINTS_H
#define CONTROL_MESSAGE_MOVEJOINTS_H

#include <ros/service_traits.h>


#include <control/MoveJointsRequest.h>
#include <control/MoveJointsResponse.h>


namespace control
{

struct MoveJoints
{

typedef MoveJointsRequest Request;
typedef MoveJointsResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MoveJoints
} // namespace control


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::control::MoveJoints > {
  static const char* value()
  {
    return "6637c617ed353a69ab1f189297893290";
  }

  static const char* value(const ::control::MoveJoints&) { return value(); }
};

template<>
struct DataType< ::control::MoveJoints > {
  static const char* value()
  {
    return "control/MoveJoints";
  }

  static const char* value(const ::control::MoveJoints&) { return value(); }
};


// service_traits::MD5Sum< ::control::MoveJointsRequest> should match 
// service_traits::MD5Sum< ::control::MoveJoints > 
template<>
struct MD5Sum< ::control::MoveJointsRequest>
{
  static const char* value()
  {
    return MD5Sum< ::control::MoveJoints >::value();
  }
  static const char* value(const ::control::MoveJointsRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::control::MoveJointsRequest> should match 
// service_traits::DataType< ::control::MoveJoints > 
template<>
struct DataType< ::control::MoveJointsRequest>
{
  static const char* value()
  {
    return DataType< ::control::MoveJoints >::value();
  }
  static const char* value(const ::control::MoveJointsRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::control::MoveJointsResponse> should match 
// service_traits::MD5Sum< ::control::MoveJoints > 
template<>
struct MD5Sum< ::control::MoveJointsResponse>
{
  static const char* value()
  {
    return MD5Sum< ::control::MoveJoints >::value();
  }
  static const char* value(const ::control::MoveJointsResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::control::MoveJointsResponse> should match 
// service_traits::DataType< ::control::MoveJoints > 
template<>
struct DataType< ::control::MoveJointsResponse>
{
  static const char* value()
  {
    return DataType< ::control::MoveJoints >::value();
  }
  static const char* value(const ::control::MoveJointsResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // CONTROL_MESSAGE_MOVEJOINTS_H
